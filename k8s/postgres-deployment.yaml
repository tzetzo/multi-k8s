# kubectl get deployments # verify the deployment is applied
# kudectl get pods # verify the pods are applied

apiVersion: apps/v1 # gives us access to specific Object types like Deployment, Service etc
kind: Deployment # Object type we want to create; Deployment is used to setup a set of identical Pods
metadata:
  name: postgres-deployment  # uniquely identifies this object in combination with the "kind"
spec:
  replicas: 1 # the number of Pod objects this Deployment object should create with the config listed under "template"
  selector:
    matchLabels:
      component: postgres # tells the Depoyment object the Pods he handles "component: postgres";
  template: # the configuration for every Pod object created by this Deployment object
    metadata:
      labels:
        component: postgres # used to reference the Pod object
    spec:
      volumes: # volumes used by the Pods
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim # the PersistentVolumeClaim object to use for defining storage
      containers:
        - name: postgres # name of the Container in the Pod
          image: postgres # the Official Postgres Image from Docker Hub
          ports:
            - containerPort: 5432 # exposes port 5432
          volumeMounts:
            - name: postgres-storage # should correspond to volumes -> name above
              mountPath: /var/lib/postgresql/data # folder inside the Container where data is stored; this data will be backed up in the persistent volume listed above
              subPath: postgres # only for postgres; the folder on the persistent volume where the postgress data will be backed up
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword # should correspond to the name from : kubectl create secret generic pgpassword --from-literal PGPASSWORD=oin88bvd4v5x
                  key: PGPASSWORD # should correspond to the key from : kubectl create secret generic pgpassword --from-literal PGPASSWORD=oin88bvd4v5x
            - name: POSTGRES_PASSWORD
              value: password
          